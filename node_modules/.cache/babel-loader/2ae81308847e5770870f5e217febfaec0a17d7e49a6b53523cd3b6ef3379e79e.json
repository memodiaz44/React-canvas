{"ast":null,"code":"var _jsxFileName = \"/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const saveD = e => {\n    if (canvasRef.current) {\n      const saveData = canvasRef.current.getSaveData();\n      const loadedSaveData = localStorage.getItem('canvasSaveData');\n      const parsedData = JSON.parse(saveData);\n      const loadedData = JSON.parse(loadedSaveData);\n      if (loadedData && parsedData.version > loadedData.version) {\n        localStorage.setItem('canvasSaveData', saveData);\n      } else if (!loadedData) {\n        localStorage.setItem('canvasSaveData', saveData);\n      }\n    }\n  };\n  const retrieveOffsetData = () => {\n    const saveData = localStorage.getItem('canvasSaveData');\n    if (saveData) {\n      const parsedData = JSON.parse(saveData);\n      let brushColor = parsedData.lines[0].brushColor;\n      if (brushColor === \"#444\") {\n        parsedData.lines[0].brushColor = \"grey\";\n      }\n      const modifiedSaveData = JSON.stringify(parsedData);\n      localStorage.setItem(\"canvasSaveData\", modifiedSaveData);\n      canvasRef.current.loadSaveData(modifiedSaveData, true);\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const canvas = canvasRef.current;\n    const drawingData = canvas.toDataURL(); // Convert canvas to data URL\n\n    fetch('/api/save-drawing', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        drawingData\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if (canvasRef.current) {\n      console.log(canvasRef.current.getContext);\n    }\n    const ctx = canvas.getContext('2d');\n\n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n\n    // Resize the canvas\n    canvas.width = newWidth;\n\n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Canvas Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `400px`,\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: 400,\n        style: {\n          backgroundColor: 'lightgray',\n          width: `${width}px`\n        },\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseOut: stopDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveD,\n      children: \"Save Drawing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: retrieveOffsetData,\n      children: \"Retrieve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncreaseWidth,\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: jumpAcross,\n      children: \"Forward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: jumpABack,\n      children: \"Backwards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"MST0RmDGNZmIgBTi6OKQkazCSu0=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","isDrawing","setIsDrawing","width","setWidth","startDrawing","e","canvas","current","ctx","getContext","offsetX","offsetY","nativeEvent","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","saveD","saveData","getSaveData","loadedSaveData","localStorage","getItem","parsedData","JSON","parse","loadedData","version","setItem","retrieveOffsetData","brushColor","lines","modifiedSaveData","stringify","loadSaveData","handleSubmit","preventDefault","drawingData","toDataURL","fetch","method","headers","body","then","response","json","data","console","log","catch","error","handleIncreaseWidth","imageData","getImageData","height","newWidth","putImageData","jumpAcross","canvasContainer","parentNode","scrollLeft","jumpABack","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","ref","backgroundColor","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onClick","_c","$RefreshReg$"],"sources":["/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n\n  const startDrawing = (e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const saveD = (e) => {\n    if (canvasRef.current) {\n      const saveData = canvasRef.current.getSaveData();\n      const loadedSaveData = localStorage.getItem('canvasSaveData');\n      const parsedData = JSON.parse(saveData);\n      const loadedData = JSON.parse(loadedSaveData);\n\n      if (loadedData && parsedData.version > loadedData.version) {\n        localStorage.setItem('canvasSaveData', saveData);\n      } else if (!loadedData) {\n        localStorage.setItem('canvasSaveData', saveData);\n      }\n    }\n  };\n  \n  const retrieveOffsetData = () => {\n    const saveData = localStorage.getItem('canvasSaveData');\n    if (saveData) {\n      const parsedData = JSON.parse(saveData);\n      let brushColor = parsedData.lines[0].brushColor;\n      if (brushColor === \"#444\") {\n        parsedData.lines[0].brushColor = \"grey\";\n      }\n      const modifiedSaveData = JSON.stringify(parsedData);\n      localStorage.setItem(\"canvasSaveData\", modifiedSaveData);\n      canvasRef.current.loadSaveData(modifiedSaveData, true);\n    }\n  };\n\n  \n  \n  \n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const canvas = canvasRef.current;\n    const drawingData = canvas.toDataURL(); // Convert canvas to data URL\n\n    fetch('/api/save-drawing', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ drawingData }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if(canvasRef.current){\n      console.log(canvasRef.current.getContext)\n    }\n    const ctx = canvas.getContext('2d');\n  \n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  \n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n  \n    // Resize the canvas\n    canvas.width = newWidth;\n  \n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  \n\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n\n  return (\n    <div>\n      <h2>Canvas Component</h2>\n      <div style={{ width: `400px`, overflow: 'auto' }}>\n        <canvas\n          ref={canvasRef}\n          width={width}\n          height={400}\n          style={{ backgroundColor: 'lightgray', width: `${width}px` }}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseOut={stopDrawing}\n        />\n      </div>\n      <button onClick={saveD}>Save Drawing</button>\n      <button onClick={retrieveOffsetData}>Retrieve</button>\n      <button onClick={handleIncreaseWidth}>Increase</button>\n      <button onClick={jumpAcross}>Forward</button>\n      <button onClick={jumpABack}>Backwards</button>\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}