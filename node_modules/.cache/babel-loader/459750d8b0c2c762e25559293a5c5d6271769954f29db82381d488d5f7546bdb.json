{"ast":null,"code":"var _jsxFileName = \"/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const saveD = e => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const dataURL = canvas.toDataURL(); // Save canvas as data URL\n      console.log(dataURL);\n    }\n  };\n  const retrieveOffsetData = () => {\n    const offsetDataString = localStorage.getItem('offsetData');\n    if (offsetDataString !== null) {\n      const offsetData = JSON.parse(offsetDataString);\n      console.log('Retrieved offset data:', offsetData);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      // Clear the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Redraw the offset data on the canvas\n      ctx.beginPath();\n      ctx.moveTo(offsetData.startX, offsetData.startY);\n      ctx.lineTo(offsetData.endX, offsetData.endY);\n      ctx.stroke();\n      return offsetData;\n    } else {\n      console.log('No offset data found in localStorage.');\n      return null;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const canvas = canvasRef.current;\n    const drawingData = canvas.toDataURL(); // Convert canvas to data URL\n\n    fetch('/api/save-drawing', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        drawingData\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if (canvasRef.current) {\n      console.log(canvasRef.current.getContext);\n    }\n    const ctx = canvas.getContext('2d');\n\n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n\n    // Resize the canvas\n    canvas.width = newWidth;\n\n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Canvas Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `400px`,\n        overflow: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: 400,\n        style: {\n          backgroundColor: 'lightgray',\n          width: `${width}px`\n        },\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseOut: stopDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveD,\n      children: \"Save Drawing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: retrieveOffsetData,\n      children: \"Retrieve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncreaseWidth,\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: jumpAcross,\n      children: \"Forward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: jumpABack,\n      children: \"Backwards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"MST0RmDGNZmIgBTi6OKQkazCSu0=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","isDrawing","setIsDrawing","width","setWidth","startDrawing","e","canvas","current","ctx","getContext","offsetX","offsetY","nativeEvent","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","saveD","dataURL","toDataURL","console","log","retrieveOffsetData","offsetDataString","localStorage","getItem","offsetData","JSON","parse","clearRect","height","startX","startY","endX","endY","handleSubmit","preventDefault","drawingData","fetch","method","headers","body","stringify","then","response","json","data","catch","error","handleIncreaseWidth","imageData","getImageData","newWidth","putImageData","jumpAcross","canvasContainer","parentNode","scrollLeft","jumpABack","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","ref","backgroundColor","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onClick","_c","$RefreshReg$"],"sources":["/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n\n  const startDrawing = (e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const saveD = (e) => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const dataURL = canvas.toDataURL(); // Save canvas as data URL\n      console.log(dataURL);\n    }\n  };\n  \n  const retrieveOffsetData = () => {\n    const offsetDataString = localStorage.getItem('offsetData');\n    if (offsetDataString !== null) {\n      const offsetData = JSON.parse(offsetDataString);\n      console.log('Retrieved offset data:', offsetData);\n      \n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      \n      // Clear the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Redraw the offset data on the canvas\n      ctx.beginPath();\n      ctx.moveTo(offsetData.startX, offsetData.startY);\n      ctx.lineTo(offsetData.endX, offsetData.endY);\n      ctx.stroke();\n      \n      return offsetData;\n    } else {\n      console.log('No offset data found in localStorage.');\n      return null;\n    }\n  }\n  \n  \n  \n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const canvas = canvasRef.current;\n    const drawingData = canvas.toDataURL(); // Convert canvas to data URL\n\n    fetch('/api/save-drawing', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ drawingData }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if(canvasRef.current){\n      console.log(canvasRef.current.getContext)\n    }\n    const ctx = canvas.getContext('2d');\n  \n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  \n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n  \n    // Resize the canvas\n    canvas.width = newWidth;\n  \n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  \n\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n\n  return (\n    <div>\n      <h2>Canvas Component</h2>\n      <div style={{ width: `400px`, overflow: 'auto' }}>\n        <canvas\n          ref={canvasRef}\n          width={width}\n          height={400}\n          style={{ backgroundColor: 'lightgray', width: `${width}px` }}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseOut={stopDrawing}\n        />\n      </div>\n      <button onClick={saveD}>Save Drawing</button>\n      <button onClick={retrieveOffsetData}>Retrieve</button>\n      <button onClick={handleIncreaseWidth}>Increase</button>\n      <button onClick={jumpAcross}>Forward</button>\n      <button onClick={jumpABack}>Backwards</button>\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}