{"ast":null,"code":"var _jsxFileName = \"/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx\";\nimport React, { Component } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport clear from 'react-canvas-draw';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCreateNewCanvas = () => {\n      this.setState(prevState => ({\n        canvasKey: prevState.canvasKey + 1\n      }));\n    };\n    this.clearCanvas = () => {\n      if (this.canvasRef.current) {\n        this.canvasRef.current.clear();\n      }\n    };\n    this.nextCAnvas = () => {\n      const {\n        brushColor\n      } = this.canvasRef.current.props;\n      if (brushColor === '#444') {\n        this.canvasRef.current.update({\n          brushColor: '#ff0000'\n        });\n      } else {\n        this.canvasRef.current.update({\n          brushColor: '#444'\n        });\n      }\n    };\n    this.saveCanvas = () => {\n      if (this.canvasRef.current) {\n        const canvasProps = Object.assign({}, this.canvasRef.current.props);\n        localStorage.setItem('canvasProps', JSON.stringify(canvasProps));\n      }\n    };\n    this.isEmptyCanvas = canvas => {\n      const context = canvas.getContext('2d');\n      const canvasData = context.getImageData(0, 0, canvas.width, canvas.height).data;\n\n      // Check if any pixel in the canvas data has a non-zero alpha value\n      for (let i = 3; i < canvasData.length; i += 4) {\n        if (canvasData[i] !== 0) {\n          return false;\n        }\n      }\n      return true;\n    };\n    this.get = () => {\n      const canvasProps = localStorage.getItem('canvasProps');\n      if (canvasProps) {\n        const parsedCanvasProps = JSON.parse(canvasProps);\n        console.log(parsedCanvasProps);\n      }\n    };\n    this.print = () => {\n      if (this.canvasRef.current && this.isEmptyCanvas(this.canvasRef.current)) {\n        console.log('hey ya');\n      }\n    };\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      canvasKey: 0\n    };\n  }\n  render() {\n    const {\n      canvasKey\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Canvas Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleCreateNewCanvas,\n        children: \"Create New Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clearCanvas,\n        children: \"Clear Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.nextCAnvas,\n        children: \"Change Red/Black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.saveCanvas,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.get,\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.print,\n        children: \"Print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CanvasDraw, {\n        ref: this.canvasRef\n      }, canvasKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Canvas;","map":{"version":3,"names":["React","Component","CanvasDraw","clear","jsxDEV","_jsxDEV","Canvas","constructor","props","handleCreateNewCanvas","setState","prevState","canvasKey","clearCanvas","canvasRef","current","nextCAnvas","brushColor","update","saveCanvas","canvasProps","Object","assign","localStorage","setItem","JSON","stringify","isEmptyCanvas","canvas","context","getContext","canvasData","getImageData","width","height","data","i","length","get","getItem","parsedCanvasProps","parse","console","log","print","createRef","state","render","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref"],"sources":["/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport clear from 'react-canvas-draw';\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      canvasKey: 0\n    };\n  }\n\n  handleCreateNewCanvas = () => {\n    this.setState((prevState) => ({\n      canvasKey: prevState.canvasKey + 1\n    }));\n  };\n  clearCanvas = () => {\n    if (this.canvasRef.current) {\n      this.canvasRef.current.clear();\n    }\n  };\n\n  nextCAnvas = () => {\n    const { brushColor } = this.canvasRef.current.props;\n    \n    if (brushColor === '#444') {\n      this.canvasRef.current.update({ brushColor: '#ff0000' });\n    } else {\n      this.canvasRef.current.update({ brushColor: '#444' });\n    }\n  };\n\n  saveCanvas = () => {\n    if (this.canvasRef.current) {\n      const canvasProps = Object.assign({}, this.canvasRef.current.props);\n      localStorage.setItem('canvasProps', JSON.stringify(canvasProps));\n    }\n  };\n\n  isEmptyCanvas = (canvas) => {\n    const context = canvas.getContext('2d');\n    const canvasData = context.getImageData(0, 0, canvas.width, canvas.height).data;\n\n    // Check if any pixel in the canvas data has a non-zero alpha value\n    for (let i = 3; i < canvasData.length; i += 4) {\n      if (canvasData[i] !== 0) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  get = () => {\n    const canvasProps = localStorage.getItem('canvasProps');\n    if (canvasProps) {\n      const parsedCanvasProps = JSON.parse(canvasProps);\n      console.log(parsedCanvasProps);\n    }\n  };\n\n  print = () => {\n    if (this.canvasRef.current && this.isEmptyCanvas(this.canvasRef.current)) {\n      console.log('hey ya');\n    }\n  };\n\n  render() {\n    const { canvasKey } = this.state;\n\n    return (\n      <div>\n        <h1>Canvas Component</h1>\n        <button onClick={this.handleCreateNewCanvas}>Create New Canvas</button>\n        <button onClick={this.clearCanvas}>Clear Canvas</button>\n        <button onClick={this.nextCAnvas}>Change Red/Black</button>\n        <button onClick={this.saveCanvas}>Save</button>\n        <button onClick={this.get}>Get</button>\n        <button onClick={this.print}>Print</button>\n        <CanvasDraw ref={this.canvasRef} key={canvasKey} />\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}