{"ast":null,"code":"var _jsxFileName = \"/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx\";\nimport React, { Component } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport \"../styles/canvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.handleCreateNewCanvas = () => {\n      this.clearCanvas();\n      this.setState({\n        canvasSaveData: null\n      });\n      localStorage.removeItem('canvasSaveData');\n    };\n    this.saveCanvas = () => {\n      if (this.canvasRef.current) {\n        const saveData = this.canvasRef.current.getSaveData();\n        localStorage.setItem('canvasSaveData', saveData);\n        this.setState({\n          canvasSaveData: saveData\n        });\n      }\n    };\n    this.loadCanvas = () => {\n      const {\n        canvasSaveData\n      } = this.state;\n      if (canvasSaveData) {\n        this.canvasRef.current.loadSaveData(canvasSaveData, true);\n      }\n    };\n    this.clearCanvas = () => {\n      if (this.canvasRef.current) {\n        this.canvasRef.current.clear();\n      }\n    };\n    this.canvasRef = /*#__PURE__*/React.createRef();\n    this.state = {\n      canvasKey: 0,\n      canvasSaveData: localStorage.getItem('canvasSaveData') || null\n    };\n  }\n  render() {\n    const {\n      canvasKey,\n      canvasSaveData\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"newone\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Canvas Component\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleCreateNewCanvas,\n        children: \"Create New Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.clearCanvas,\n        children: \"Clear Canvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.saveCanvas,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.loadCanvas,\n        children: \"Load\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), canvasSaveData ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Canvas Data: \", canvasSaveData]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No Canvas Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CanvasDraw, {\n        ref: this.canvasRef\n      }, canvasKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Canvas;","map":{"version":3,"names":["React","Component","CanvasDraw","jsxDEV","_jsxDEV","Canvas","constructor","props","handleCreateNewCanvas","clearCanvas","setState","canvasSaveData","localStorage","removeItem","saveCanvas","canvasRef","current","saveData","getSaveData","setItem","loadCanvas","state","loadSaveData","clear","createRef","canvasKey","getItem","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref"],"sources":["/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport CanvasDraw from 'react-canvas-draw';\nimport \"../styles/canvas.css\"\n\nclass Canvas extends Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = React.createRef();\n    this.state = {\n      canvasKey: 0,\n      canvasSaveData: localStorage.getItem('canvasSaveData') || null\n    };\n  }\n\n  handleCreateNewCanvas = () => {\n    this.clearCanvas();\n    this.setState({ canvasSaveData: null });\n    localStorage.removeItem('canvasSaveData');\n  };\n  \n  saveCanvas = () => {\n    if (this.canvasRef.current) {\n      const saveData = this.canvasRef.current.getSaveData();\n      localStorage.setItem('canvasSaveData', saveData);\n      this.setState({ canvasSaveData: saveData });\n    }\n  };\n  \n  loadCanvas = () => {\n    const { canvasSaveData } = this.state;\n    if (canvasSaveData) {\n      this.canvasRef.current.loadSaveData(canvasSaveData, true);\n    }\n  };\n\n  clearCanvas = () => {\n    if (this.canvasRef.current) {\n      this.canvasRef.current.clear();\n    }\n  };\n\n  render() {\n    const { canvasKey, canvasSaveData } = this.state;\n\n    return (\n      <div className='newone'>\n        <h1>Canvas Component</h1>\n        \n        <button onClick={this.handleCreateNewCanvas}>Create New Canvas</button>\n        <button onClick={this.clearCanvas}>Clear Canvas</button>\n        <button onClick={this.saveCanvas}>Save</button>\n        <button onClick={this.loadCanvas}>Load</button>\n        \n        {canvasSaveData ? (\n          <p>Canvas Data: {canvasSaveData}</p>\n        ) : (\n          <p>No Canvas Data</p>\n        )}\n        \n        <CanvasDraw ref={this.canvasRef} key={canvasKey} />\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}