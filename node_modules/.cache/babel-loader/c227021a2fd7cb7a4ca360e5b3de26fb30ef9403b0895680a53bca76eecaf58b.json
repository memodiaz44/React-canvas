{"ast":null,"code":"var _jsxFileName = \"/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const [savedImageData, setSavedImageData] = useState('');\n  const imageRef = useRef(null);\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const saveD = e => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const dataURL = canvas.toDataURL(); // Save canvas as data URL\n      setSavedImageData(dataURL);\n\n      // Draw the saved image data onto the saved canvas\n      const savedCanvas = savedCanvasRef.current;\n      const savedCtx = savedCanvas.getContext('2d');\n      savedCtx.clearRect(0, 0, savedCanvas.width, savedCanvas.height);\n      const img = new Image();\n      img.src = dataURL;\n      img.onload = () => {\n        savedCtx.drawImage(img, 0, 0);\n      };\n    }\n  };\n  const retrieveOffsetData = () => {\n    const offsetDataString = localStorage.getItem('offsetData');\n    if (offsetDataString !== null) {\n      const offsetData = JSON.parse(offsetDataString);\n      console.log('Retrieved offset data:', offsetData);\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n\n      // Clear the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n      // Redraw the offset data on the canvas\n      ctx.beginPath();\n      ctx.moveTo(offsetData.startX, offsetData.startY);\n      ctx.lineTo(offsetData.endX, offsetData.endY);\n      ctx.stroke();\n      return offsetData;\n    } else {\n      console.log('No offset data found in localStorage.');\n      return null;\n    }\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const canvas = canvasRef.current;\n    const drawingData = canvas.toDataURL(); // Convert canvas to data URL\n\n    fetch('/api/save-drawing', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        drawingData\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(data);\n    }).catch(error => {\n      console.error(error);\n    });\n  };\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if (canvasRef.current) {\n      console.log(canvasRef.current.getContext);\n    }\n    const ctx = canvas.getContext('2d');\n\n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n\n    // Resize the canvas\n    canvas.width = newWidth;\n\n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Canvas Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `400px`,\n        overflow: 'auto'\n      },\n      children: [savedImageData && /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: imageRef,\n        src: savedImageData,\n        alt: \"Saved Drawing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: 400,\n        style: {\n          backgroundColor: 'lightgray',\n          width: `${width}px`\n        },\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseOut: stopDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveD,\n      children: \"Save Drawing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: retrieveOffsetData,\n      children: \"Retrieve\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleIncreaseWidth,\n      children: \"Increase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: jumpAcross,\n      children: \"Forward\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: jumpABack,\n      children: \"Backwards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"h0ffUmCipj35TT8NEnc97AIh41A=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","isDrawing","setIsDrawing","width","setWidth","savedImageData","setSavedImageData","imageRef","startDrawing","e","canvas","current","ctx","getContext","offsetX","offsetY","nativeEvent","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","saveD","dataURL","toDataURL","savedCanvas","savedCanvasRef","savedCtx","clearRect","height","img","Image","src","onload","drawImage","retrieveOffsetData","offsetDataString","localStorage","getItem","offsetData","JSON","parse","console","log","startX","startY","endX","endY","handleSubmit","preventDefault","drawingData","fetch","method","headers","body","stringify","then","response","json","data","catch","error","handleIncreaseWidth","imageData","getImageData","newWidth","putImageData","jumpAcross","canvasContainer","parentNode","scrollLeft","jumpABack","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","ref","alt","backgroundColor","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onClick","_c","$RefreshReg$"],"sources":["/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const [savedImageData, setSavedImageData] = useState('');\n\n  const imageRef = useRef(null);\n\n\n  const startDrawing = (e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const saveD = (e) => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const dataURL = canvas.toDataURL(); // Save canvas as data URL\n      setSavedImageData(dataURL);\n\n      // Draw the saved image data onto the saved canvas\n      const savedCanvas = savedCanvasRef.current;\n      const savedCtx = savedCanvas.getContext('2d');\n      savedCtx.clearRect(0, 0, savedCanvas.width, savedCanvas.height);\n      const img = new Image();\n      img.src = dataURL;\n      img.onload = () => {\n        savedCtx.drawImage(img, 0, 0);\n      };\n    }\n  };\n  \n  const retrieveOffsetData = () => {\n    const offsetDataString = localStorage.getItem('offsetData');\n    if (offsetDataString !== null) {\n      const offsetData = JSON.parse(offsetDataString);\n      console.log('Retrieved offset data:', offsetData);\n      \n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      \n      // Clear the canvas\n      ctx.clearRect(0, 0, canvas.width, canvas.height);\n      \n      // Redraw the offset data on the canvas\n      ctx.beginPath();\n      ctx.moveTo(offsetData.startX, offsetData.startY);\n      ctx.lineTo(offsetData.endX, offsetData.endY);\n      ctx.stroke();\n      \n      return offsetData;\n    } else {\n      console.log('No offset data found in localStorage.');\n      return null;\n    }\n  }\n  \n  \n  \n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const canvas = canvasRef.current;\n    const drawingData = canvas.toDataURL(); // Convert canvas to data URL\n\n    fetch('/api/save-drawing', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ drawingData }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        console.log(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  };\n\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if(canvasRef.current){\n      console.log(canvasRef.current.getContext)\n    }\n    const ctx = canvas.getContext('2d');\n  \n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  \n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n  \n    // Resize the canvas\n    canvas.width = newWidth;\n  \n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  \n\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n\n  return (\n    <div>\n      <h2>Canvas Component</h2>\n      <div style={{ width: `400px`, overflow: 'auto' }}>\n      {savedImageData && <img ref={imageRef} src={savedImageData} alt=\"Saved Drawing\" />}\n\n        <canvas\n          ref={canvasRef}\n          width={width}\n          height={400}\n          style={{ backgroundColor: 'lightgray', width: `${width}px` }}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseOut={stopDrawing}\n          \n        />\n      </div>\n\n      <button onClick={saveD}>Save Drawing</button>\n      <button onClick={retrieveOffsetData}>Retrieve</button>\n      <button onClick={handleIncreaseWidth}>Increase</button>\n      <button onClick={jumpAcross}>Forward</button>\n      <button onClick={jumpABack}>Backwards</button>\n\n\n    </div>\n  );\n\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}