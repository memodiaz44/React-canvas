{"ast":null,"code":"var _jsxFileName = \"/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../styles/canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const [savedImageData, setSavedImageData] = useState(null);\n  const [showSavedImage, setShowSavedImage] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const imageRef = useRef(null);\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) {\n      console.log;\n      return;\n    }\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const saveD = e => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const dataURL = canvas.toDataURL(); // Save canvas as data URL\n      setSavedImageData(dataURL);\n      console.log(setSavedImageData);\n    }\n  };\n  const handleLoadData = () => {\n    if (savedImageData) {\n      console.log(savedImageData);\n      setImageUrl(savedImageData);\n      setIsDrawing(false); // Reset the drawing state\n    }\n  };\n\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if (canvasRef.current) {\n      console.log(canvasRef.current.getContext);\n    }\n    const ctx = canvas.getContext('2d');\n\n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n\n    // Resize the canvas\n    canvas.width = newWidth;\n\n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n  const handleShowSavedImage = () => {\n    setShowSavedImage(true);\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const image = new Image();\n    image.onload = () => {\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      draw(canvas, context);\n    };\n    image.src = imageUrl;\n  }, [imageUrl]);\n  const clearData = () => {\n    localStorage.removeItem(\"canvasImageData\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Canvas Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        width: '400px',\n        height: '400px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: 400,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          backgroundColor: 'lightgray'\n        },\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseOut: stopDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"baby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveD,\n      children: \"Save Drawing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearData,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoadData,\n      children: \"Show Saved Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"StsTRUKhFnOht1ji0vhfMjLSuJk=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","isDrawing","setIsDrawing","width","setWidth","savedImageData","setSavedImageData","showSavedImage","setShowSavedImage","imageUrl","setImageUrl","imageRef","startDrawing","e","canvas","current","ctx","getContext","offsetX","offsetY","nativeEvent","beginPath","moveTo","draw","console","log","lineTo","stroke","stopDrawing","saveD","dataURL","toDataURL","handleLoadData","handleIncreaseWidth","imageData","getImageData","height","newWidth","putImageData","jumpAcross","canvasContainer","parentNode","scrollLeft","jumpABack","handleShowSavedImage","context","image","Image","onload","drawImage","src","clearData","localStorage","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","ref","top","left","backgroundColor","onMouseDown","onMouseMove","onMouseUp","onMouseOut","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport '../styles/canvas.css'\n\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const [savedImageData, setSavedImageData] = useState(null);\n  const [showSavedImage, setShowSavedImage] = useState(false);\n  const [imageUrl, setImageUrl] = useState('');\n  const imageRef = useRef(null);\n\n\n\n  \n\n\n  const startDrawing = (e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) { console.log \n      return;\n    }\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const saveD = (e) => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const dataURL = canvas.toDataURL(); // Save canvas as data URL\n      setSavedImageData(dataURL);\n      console.log(setSavedImageData)\n    }\n  };\n\n\n  const handleLoadData = () => {\n    if (savedImageData) {\n      console.log(savedImageData);\n      setImageUrl(savedImageData);\n      setIsDrawing(false); // Reset the drawing state\n    }\n  };\n\n\n  \n  \n \n  \n\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if(canvasRef.current){\n      console.log(canvasRef.current.getContext)\n    }\n    const ctx = canvas.getContext('2d');\n  \n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  \n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n  \n    // Resize the canvas\n    canvas.width = newWidth;\n  \n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  \n\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n  const handleShowSavedImage = () => {\n    setShowSavedImage(true);\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    const image = new Image();\n  \n    image.onload = () => {\n      context.drawImage(image, 0, 0, canvas.width, canvas.height);\n      draw(canvas, context);\n    };\n  \n    image.src = imageUrl;\n  }, [imageUrl]);\n\n  const clearData = () => {\n    localStorage.removeItem(\"canvasImageData\")\n  }\n\n  return (\n    <div>\n      <h2>Canvas Component</h2>\n      <div style={{ position: 'relative', width: '400px', height: '400px' }}>\n        <canvas\n          ref={canvasRef}\n          width={width}\n          height={400}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            backgroundColor: 'lightgray',\n          }}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseOut={stopDrawing}\n        />\n     <img src={imageUrl} alt='baby'></img>\n      </div>\n      <button onClick={saveD}>Save Drawing</button>\n      <button onClick={clearData}>Clear</button>\n      <button onClick={handleLoadData}>Show Saved Image</button>\n    </div>\n  );\n  \n\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}