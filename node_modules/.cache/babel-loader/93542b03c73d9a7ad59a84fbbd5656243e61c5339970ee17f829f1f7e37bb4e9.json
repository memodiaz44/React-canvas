{"ast":null,"code":"var _jsxFileName = \"/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useContext } from 'react';\n/* eslint-disable */\nimport '../styles/canvas.css';\nimport { UserContext } from '../habdler/userContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const [savedImageData, setSavedImageData] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [store, setStore] = useState([]);\n  const [index, setIndex] = useState(0);\n  const {\n    user,\n    setUser\n  } = useContext(UserContext);\n  const [isRetrieveData, setIsRetrieveData] = useState(false);\n  const [isErasing, setIsErasing] = useState(false);\n  const [imageName, setImageName] = useState('');\n  useEffect(() => {\n    if (savedImageData) {\n      handleLoadData();\n    }\n  }, [savedImageData]);\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    if (isErasing) {\n      ctx.strokeStyle = 'lightgray'; // Set erase color\n      ctx.globalCompositeOperation = 'destination-out'; // Set erase mode\n    } else {\n      ctx.strokeStyle = 'black'; // Set draw color\n      ctx.globalCompositeOperation = 'source-over'; // Set draw mode\n    }\n\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const saveD = async () => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const dataURL = canvas.toDataURL();\n      setSavedImageData(dataURL);\n      setStore(prevStore => [...prevStore, dataURL]);\n      console.log(dataURL);\n      console.log('data saved');\n    }\n  };\n  const clearData = () => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    console.log('data cleared ');\n    return true;\n  };\n  const saveData = async () => {\n    const userId = user.userID;\n    if (savedImageData === null || imageName === '') {\n      alert('No image saved');\n      return;\n    }\n    if (!imageName) {\n      alert('Please enter the name of the image');\n      return;\n    }\n    const jsonData = {\n      name: imageName,\n      imageURL: savedImageData // Update to use 'imageURL' instead of 'imageURLs'\n    };\n\n    try {\n      const response = await fetch(`http://3.19.219.106:5001/api/users/${userId}/images`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      });\n      if (response.ok) {\n        const updatedUser = await response.json();\n        console.log(updatedUser); // Do something with the updated user object\n      } else {\n        throw new Error('Error adding image to user');\n      }\n    } catch (error) {\n      console.error('Error adding image to user:', error);\n    }\n  };\n  const handleLoadData = () => {\n    if (savedImageData) {\n      setImageUrl(savedImageData);\n      console.log(savedImageData);\n      setIsRetrieveData(true);\n      setIsDrawing(false); // Reset the drawing state\n      console.log('data loaded ');\n    }\n  };\n  const erase = () => {\n    setIsErasing(!isErasing); // Toggle the erasing mode\n  };\n\n  const retrieveData = () => {\n    let index = 0;\n    if (store.length > 0) {\n      setIsRetrieveData(false);\n      const interval = setInterval(() => {\n        console.log(imageUrl.opacity);\n        setImageUrl(store[index]);\n        index++;\n        if (index === store.length) {\n          clearInterval(interval);\n\n          // Clear the interval when reaching the end of the array\n        }\n      }, 1000);\n      return () => {\n        clearInterval(interval);\n      };\n    } else if (store.length === 0) {\n      alert('no content saved to animate');\n    }\n  };\n  const multiFunc = async () => {\n    await saveD(); // Wait for saveD to complete\n    await clearData(); // Wait for clearData to complete\n    // handleLoadData will be triggered by the useEffect\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [user ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" Draw \", user.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 14\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" Drawing TIme \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 43\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \" content-center\\t\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\",\n        style: {\n          position: '',\n          width: '400px',\n          height: '400px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          width: width,\n          height: 400,\n          style: {\n            position: '',\n            top: 0,\n            left: 0,\n            backgroundColor: 'lightgray',\n            border: '2px solid '\n          },\n          onMouseDown: startDrawing,\n          onMouseMove: draw,\n          onMouseUp: stopDrawing,\n          onMouseOut: stopDrawing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: \"baby\",\n          style: {\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            opacity: isRetrieveData ? 0.2 : 1\n          },\n          draggable: \"false\",\n          onMouseDown: startDrawing,\n          onMouseMove: draw,\n          onMouseUp: stopDrawing,\n          onMouseOut: stopDrawing\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex h-20 \",\n        children: [user ? /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const imageName = prompt('Enter the name of the image');\n            if (imageName) {\n              setImageName(imageName);\n              saveData();\n            }\n          },\n          children: \"Save Drawing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveD,\n          children: \"Save Drawing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: erase,\n          children: isErasing ? 'Draw' : 'Erase'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: retrieveData,\n          children: \"Animate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearData,\n          children: \"Clear\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleLoadData,\n          children: \"Show Saved Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: multiFunc,\n          children: \"next page\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n_s(Canvas, \"1oPoJjxX3TNm3Vft7jR/TLGxY4Q=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","UserContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Canvas","_s","canvasRef","isDrawing","setIsDrawing","width","setWidth","savedImageData","setSavedImageData","imageUrl","setImageUrl","store","setStore","index","setIndex","user","setUser","isRetrieveData","setIsRetrieveData","isErasing","setIsErasing","imageName","setImageName","handleLoadData","startDrawing","e","canvas","current","ctx","getContext","offsetX","offsetY","nativeEvent","beginPath","moveTo","draw","strokeStyle","globalCompositeOperation","lineTo","stroke","stopDrawing","saveD","dataURL","toDataURL","prevStore","console","log","clearData","context","clearRect","height","saveData","userId","userID","alert","jsonData","name","imageURL","response","fetch","method","headers","body","JSON","stringify","ok","updatedUser","json","Error","error","erase","retrieveData","length","interval","setInterval","opacity","clearInterval","multiFunc","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","position","ref","top","left","backgroundColor","border","onMouseDown","onMouseMove","onMouseUp","onMouseOut","src","alt","draggable","onClick","prompt","_c","$RefreshReg$"],"sources":["/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext  } from 'react';\n/* eslint-disable */ \nimport '../styles/canvas.css';\nimport { UserContext } from '../habdler/userContext';\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const [savedImageData, setSavedImageData] = useState('');\n\n  const [imageUrl, setImageUrl] = useState('');\n  const [store, setStore] = useState([])\n  const [index,  setIndex] = useState(0)\n  const { user ,setUser } = useContext(UserContext);\n  const [isRetrieveData, setIsRetrieveData] = useState(false);\n  const [isErasing, setIsErasing] = useState(false);\n  const [imageName, setImageName] = useState('');\n\n\n\n  useEffect(() => {\n    if (savedImageData) {\n      handleLoadData();\n    }\n  }, [savedImageData]);\n\n  const startDrawing = (e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    if (isErasing) {\n      ctx.strokeStyle = 'lightgray'; // Set erase color\n      ctx.globalCompositeOperation = 'destination-out'; // Set erase mode\n    } else {\n      ctx.strokeStyle = 'black'; // Set draw color\n      ctx.globalCompositeOperation = 'source-over'; // Set draw mode\n    }\n\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const saveD = async () => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const dataURL = canvas.toDataURL();\n\n  \n      setSavedImageData(dataURL);\n      setStore(prevStore => [...prevStore, dataURL]);\n      console.log(dataURL);\n      console.log('data saved');\n    }\n  };\n  \n\n  const clearData = () => {\n    const canvas = canvasRef.current\n    const context = canvas.getContext('2d');\n    context.clearRect(0, 0, canvas.width, canvas.height);\n    console.log('data cleared ')\n    return true \n  };\n\n\n\n  const saveData = async () => {\n    const userId = user.userID;\n  \n    if (savedImageData === null || imageName === '') {\n      alert('No image saved');\n      return;\n    }\n  \n    if (!imageName) {\n      alert('Please enter the name of the image');\n      return;\n    }\n  \n    const jsonData = {\n      name: imageName,\n      imageURL: savedImageData // Update to use 'imageURL' instead of 'imageURLs'\n    };\n  \n    try {\n      const response = await fetch(`http://3.19.219.106:5001/api/users/${userId}/images`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n      });\n  \n      if (response.ok) {\n        const updatedUser = await response.json();\n        console.log(updatedUser); // Do something with the updated user object\n      } else {\n        throw new Error('Error adding image to user');\n      }\n    } catch (error) {\n      console.error('Error adding image to user:', error);\n    }\n  };\n  \n\n  \n\n  const handleLoadData = () => {\n    if (savedImageData) {\n      setImageUrl(savedImageData);\n      console.log(savedImageData)\n      setIsRetrieveData(true);\n      setIsDrawing(false); // Reset the drawing state\n      console.log('data loaded ')\n     \n    }\n  };\n\n\n  \n\n  const erase = () => {\n    setIsErasing(!isErasing); // Toggle the erasing mode\n  };\n\n\n\n  const retrieveData = () => {\n    let index = 0\n    if(store.length > 0){\n      setIsRetrieveData(false);\n\n\n\n      const interval = setInterval(() => { \n        console.log(imageUrl.opacity)\n        setImageUrl(store[index])\n        index++\n        if (index === store.length) {\n          clearInterval(interval);\n          \n          // Clear the interval when reaching the end of the array\n        }\n      }, 1000);\n\n      return () => {\n        clearInterval(interval)\n      }\n    } else if (store.length === 0){\n      alert('no content saved to animate')\n    }\n  }\n\n  const multiFunc = async () => {\n    await saveD(); // Wait for saveD to complete\n    await clearData(); // Wait for clearData to complete\n    // handleLoadData will be triggered by the useEffect\n  };\n  \n  return (\n    <>\n    {user ?  <h2> Draw {user.name}</h2> : <h2> Drawing TIme </h2>}\n    <div className=' content-center\t'>\n   \n      <div  \n      className=''\n      style={{ position: '', width: '400px', height: '400px' }}>\n        <canvas\n          ref={canvasRef}\n          width={width}\n          height={400}\n          style={{\n           \n            position: '',\n            top: 0,\n            left: 0,\n            backgroundColor: 'lightgray',\n            border: '2px solid ',\n          }}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseOut={stopDrawing}\n          \n        />\n          {imageUrl && (\n<img\n  src={imageUrl}\n  alt='baby'\n  style={{\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    opacity: isRetrieveData ? 0.2 : 1,\n  }}\n  draggable=\"false\" \n  onMouseDown={startDrawing}\n  onMouseMove={draw}\n  onMouseUp={stopDrawing}\n  onMouseOut={stopDrawing}\n/>\n\n  )}\n      \n      </div>\n      <div className='flex h-20 '>\n        {user ? \n        <button onClick={() => {\n        const imageName = prompt('Enter the name of the image');\n         if (imageName) {\n        setImageName(imageName);\n         saveData();\n  }\n}}>Save Drawing</button>\n        :\n      <button onClick={saveD}>Save Drawing</button>}\n      <button onClick={erase}>\n  {isErasing ? 'Draw' : 'Erase'}\n</button>\n\n      <button onClick={retrieveData}>Animate</button>\n      <button onClick={clearData}>Clear</button>\n      <button onClick={handleLoadData}>Show Saved Image</button>\n      <button onClick={multiFunc}>next page</button>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}