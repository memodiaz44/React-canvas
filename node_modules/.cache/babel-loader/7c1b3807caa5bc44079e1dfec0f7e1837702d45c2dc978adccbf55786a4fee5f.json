{"ast":null,"code":"var _jsxFileName = \"/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas() {\n  _s();\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const [savedImageData, setSavedImageData] = useState('');\n  const [showSavedImage, setShowSavedImage] = useState(false);\n  const [savedData, setSavedData] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n  const imageRef = useRef(null);\n  const startDrawing = e => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n  const draw = e => {\n    if (!isDrawing) return;\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const {\n      offsetX,\n      offsetY\n    } = e.nativeEvent;\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n  const saveD = e => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const dataURL = canvas.toDataURL(); // Save canvas as data URL\n      console.log(dataURL);\n      localStorage.setItem('canvasImageData', dataURL);\n      setSavedImageData(dataURL);\n    }\n  };\n  const handleLoadData = () => {\n    const loadedImageData = localStorage.getItem('canvasImageData');\n    if (loadedImageData) {\n      const image = new Image();\n      image.src = loadedImageData;\n    }\n  };\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if (canvasRef.current) {\n      console.log(canvasRef.current.getContext);\n    }\n    const ctx = canvas.getContext('2d');\n\n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n\n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n\n    // Resize the canvas\n    canvas.width = newWidth;\n\n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n  const handleShowSavedImage = () => {\n    setShowSavedImage(true);\n  };\n  const clearData = () => {\n    localStorage.removeItem(\"canvasImageData\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Canvas Component\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: `400px`,\n        overflow: 'auto'\n      },\n      children: imageUrl ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageUrl,\n        alt: \"Loaded Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 19\n      }, this) : /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: canvasRef,\n        width: width,\n        height: 400,\n        style: {\n          backgroundColor: 'lightgray',\n          width: `${width}px`\n        },\n        onMouseDown: startDrawing,\n        onMouseMove: draw,\n        onMouseUp: stopDrawing,\n        onMouseOut: stopDrawing\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: saveD,\n      children: \"Save Drawing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearData,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLoadData,\n      children: \"Show Saved Image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"xcUmGg53Lx9Cjx3q5qIw0JvNdfM=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","Canvas","_s","canvasRef","isDrawing","setIsDrawing","width","setWidth","savedImageData","setSavedImageData","showSavedImage","setShowSavedImage","savedData","setSavedData","imageUrl","setImageUrl","imageRef","startDrawing","e","canvas","current","ctx","getContext","offsetX","offsetY","nativeEvent","beginPath","moveTo","draw","lineTo","stroke","stopDrawing","saveD","dataURL","toDataURL","console","log","localStorage","setItem","handleLoadData","loadedImageData","getItem","image","Image","src","handleIncreaseWidth","imageData","getImageData","height","newWidth","putImageData","jumpAcross","canvasContainer","parentNode","scrollLeft","jumpABack","handleShowSavedImage","clearData","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","style","overflow","alt","ref","backgroundColor","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onClick","_c","$RefreshReg$"],"sources":["/Users/adeldiaz/Documents/projectsPortfolio/flipN/flip-note/src/component/Canvas.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nfunction Canvas() {\n  const canvasRef = useRef(null);\n  const [isDrawing, setIsDrawing] = useState(false);\n  const [width, setWidth] = useState(400);\n  const [savedImageData, setSavedImageData] = useState('');\n  const [showSavedImage, setShowSavedImage] = useState(false);\n  const [savedData, setSavedData] = useState(null);\n  const [imageUrl, setImageUrl] = useState(null);\n\n\n  const imageRef = useRef(null);\n\n\n  const startDrawing = (e) => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.beginPath();\n    ctx.moveTo(offsetX, offsetY);\n    setIsDrawing(true);\n  };\n\n  const draw = (e) => {\n    if (!isDrawing) return;\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    const { offsetX, offsetY } = e.nativeEvent;\n\n    ctx.lineTo(offsetX, offsetY);\n    ctx.stroke();\n  };\n\n  const stopDrawing = () => {\n    setIsDrawing(false);\n  };\n\n  const saveD = (e) => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      const ctx = canvas.getContext('2d');\n      const dataURL = canvas.toDataURL(); // Save canvas as data URL\n      console.log(dataURL)\n      localStorage.setItem('canvasImageData', dataURL);\n      setSavedImageData(dataURL);\n    }\n  };\n\n\n  const handleLoadData = () => {\n    const loadedImageData = localStorage.getItem('canvasImageData');\n    if (loadedImageData) {\n      const image = new Image();\n      image.src = loadedImageData;\n   \n    }\n  };\n  \n \n  \n\n  const handleIncreaseWidth = () => {\n    const canvas = canvasRef.current;\n    if(canvasRef.current){\n      console.log(canvasRef.current.getContext)\n    }\n    const ctx = canvas.getContext('2d');\n  \n    // Get the current drawing content\n    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n  \n    // Increase the canvas width\n    const newWidth = width + 400;\n    setWidth(newWidth);\n  \n    // Resize the canvas\n    canvas.width = newWidth;\n  \n    // Redraw the content on the resized canvas\n    ctx.putImageData(imageData, 0, 0);\n  };\n  \n\n  const jumpAcross = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft += 400;\n    }\n  };\n\n  const jumpABack = () => {\n    const canvasContainer = canvasRef.current.parentNode;\n    if (canvasContainer) {\n      canvasContainer.scrollLeft -= 400;\n    }\n  };\n  const handleShowSavedImage = () => {\n    setShowSavedImage(true);\n  };\n\n  const clearData = () => {\n    localStorage.removeItem(\"canvasImageData\")\n  }\n\n  return (\n    <div>\n      <h2>Canvas Component</h2>\n      <div style={{ width: `400px`, overflow: 'auto' }}>\n\n      {imageUrl ? <img src={imageUrl} alt=\"Loaded Image\" />\n      :\n        <canvas\n          ref={canvasRef}\n          width={width}\n          height={400}\n          style={{ backgroundColor: 'lightgray', width: `${width}px` }}\n          onMouseDown={startDrawing}\n          onMouseMove={draw}\n          onMouseUp={stopDrawing}\n          onMouseOut={stopDrawing}\n        />\n  }\n      </div>\n      <button onClick={saveD}>Save Drawing</button>\n      <button onClick={clearData}>Clear</button>\n      <button onClick={handleLoadData}>Show Saved Image</button>\n    </div>\n  );\n}\n\nexport default Canvas;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}